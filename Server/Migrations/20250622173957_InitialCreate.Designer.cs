// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Do;

#nullable disable

namespace Server.Migrations
{
    [DbContext(typeof(dbcontext))]
    [Migration("20250622173957_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Server.Do.DetailingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int")
                        .HasColumnName("count");

                    b.Property<int>("IdModel")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int")
                        .HasColumnName("size");

                    b.HasKey("Id");

                    b.HasIndex("IdModel");

                    b.ToTable("detailingModels", (string)null);
                });

            modelBuilder.Entity("Server.Do.DetailingOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("IdModel")
                        .HasColumnType("int");

                    b.Property<int>("IdOrder")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdOrder");

                    b.ToTable("detailingOrders", (string)null);
                });

            modelBuilder.Entity("Server.Do.Modell", b =>
                {
                    b.Property<int>("IdModel")
                        .HasColumnType("int");

                    b.Property<string>("Kategory")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("IdModel")
                        .HasName("PK__modell__C2F00099D25283D9");

                    b.ToTable("modell", (string)null);
                });

            modelBuilder.Entity("Server.Do.Order", b =>
                {
                    b.Property<int>("IdOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrder"));

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Contact ");

                    b.Property<int>("CostPrice")
                        .HasColumnType("int")
                        .HasColumnName("CostPrice ");

                    b.Property<DateTime>("DateOfEvent")
                        .HasColumnType("date");

                    b.Property<DateTime>("DateOfOrdder")
                        .HasColumnType("date");

                    b.Property<int?>("IdSchool")
                        .HasColumnType("int");

                    b.Property<string>("PhoneContact")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PhoneContact ");

                    b.Property<string>("ProvisionAddress")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SchoolName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdOrder")
                        .HasName("PK__Order__C38F3009EE80D13A");

                    b.HasIndex("IdSchool");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("Server.Do.Payment", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__payment__3214EC0725F1B4D8");

                    b.ToTable("payment", (string)null);
                });

            modelBuilder.Entity("Server.Do.School", b =>
                {
                    b.Property<int>("IdSchool")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSchool"));

                    b.Property<string>("AddressSchool")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("addressSchool");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("phone");

                    b.HasKey("IdSchool")
                        .HasName("PK__school__B54450856C7F6819");

                    b.ToTable("school", (string)null);
                });

            modelBuilder.Entity("Server.Do.DetailingModel", b =>
                {
                    b.HasOne("Server.Do.Modell", "IdModelNavigation")
                        .WithMany("DetailingModels")
                        .HasForeignKey("IdModel")
                        .IsRequired()
                        .HasConstraintName("FK__detailing__IdMod__3A4CA8FD");

                    b.Navigation("IdModelNavigation");
                });

            modelBuilder.Entity("Server.Do.DetailingOrder", b =>
                {
                    b.HasOne("Server.Do.Order", "IdOrderNavigation")
                        .WithMany("DetailingOrders")
                        .HasForeignKey("IdOrder")
                        .IsRequired()
                        .HasConstraintName("FK__detailing__IdOrd__70DDC3D8");

                    b.Navigation("IdOrderNavigation");
                });

            modelBuilder.Entity("Server.Do.Order", b =>
                {
                    b.HasOne("Server.Do.School", "IdSchoolNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("IdSchool")
                        .HasConstraintName("FK__Order__IdSchool__6FE99F9F");

                    b.Navigation("IdSchoolNavigation");
                });

            modelBuilder.Entity("Server.Do.Modell", b =>
                {
                    b.Navigation("DetailingModels");
                });

            modelBuilder.Entity("Server.Do.Order", b =>
                {
                    b.Navigation("DetailingOrders");
                });

            modelBuilder.Entity("Server.Do.School", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
